#!/bin/sh

. _APPLICATION_CONFIG_PATH_

. _LIBRARY_PATH_/_APPLICATION_NAME_/instance.sh
. _LIBRARY_PATH_/_APPLICATION_NAME_/cli.sh
. _LIBRARY_PATH_/_APPLICATION_NAME_/history.sh

trap _cleanup INT 0 2

_cleanup() {
	if [ -e $_SESSION_FILE ]; then
		_export_history

		if [ -n "$_CLEANUP" ]; then
			_warn "Removing $_SESSION_FILE"

			# remove session directory
			$_RUN_AS_COMMAND rm -rf $(head -1 $_SESSION_FILE)

			# remove session conf
			rm -rf $_SESSION_FILE
		fi
	fi
}

_launch() {
	local _has_running_instances=$(ps xo comm | grep "^${_COMMAND}$" -c)
	if [ "$_has_running_instances" -eq "0" ]; then
		_warn "Attempting to clean up leftover session (if it exists)"
		_CLEANUP=1
		_cleanup
	else
		_warn "no cleanup"
	fi

	# https://unix.stackexchange.com/questions/153210/cannot-redirect-output-from-sed
	# https://stackoverflow.com/questions/7161821/how-to-grep-a-continuous-stream
	if [ ! -e $_SESSION_FILE ] || [ -n "$_BROWSER_REMOTE_PORT"]; then
		_CLEANUP=1

		echo "$_INSTANCE_DIRECTORY" >>$_SESSION_FILE

		$_COMMAND 2>&1 | $_GNU_GREP --line-buffered -Po "ws://127.0.0.1:[\d]{3,6}/devtools/browser/[a-z\d]{8}-[a-z\d]{4}-[a-z\d]{4}-[a-z\d]{4}-[a-z\d]{12}" \
			>>$_SESSION_FILE
	else
		$_COMMAND 2>/dev/null
	fi
}

_launch
